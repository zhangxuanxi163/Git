public class Main {
    public static void main(String args[]) {
        C c = new C();
    }
}
class A {
    A() { 
        System.out.println("A类构造方法");
    }
}
class B extends A {
    B() {
        System.out.println("B类构造方法");
    }
}
class C extends B {
    C() {
        System.out.println("C类构造方法");
    }
}

A、
A类构造方法


B、
A类构造方法
B类构造方法


C、
A类构造方法
B类构造方法
C类构造方法


D、
C类构造方法

解答：

在这个问题中，我们要分析 Main 类中的 C c = new C(); 语句执行时的输出。

代码分析：
C 类继承自 B 类，而 B 类又继承自 A 类。
当我们通过 new C() 创建一个 C 类的对象时，Java 会首先调用构造函数来初始化对象。构造函数的调用顺序是从父类到子类，即：
首先调用 A 类的构造方法（父类最顶层的构造方法）。
然后调用 B 类的构造方法（继承自 A 类）。
最后调用 C 类的构造方法（子类的构造方法）。
详细流程：
C 类的构造方法 会隐式调用其父类 B 的构造方法。
B 类的构造方法 会隐式调用其父类 A 的构造方法。
因为在每个类的构造方法中都会打印信息，所以顺序是：
先打印 A类构造方法
然后打印 B类构造方法
最后打印 C类构造方法
运行结果：
css
复制代码
A类构造方法
B类构造方法
C类构造方法
答案是 C：

css
复制代码
A类构造方法
B类构造方法
C类构造方法
解释：
Java 的构造方法遵循父类到子类的调用顺序，确保父类的初始化先完成，再初始化子类。